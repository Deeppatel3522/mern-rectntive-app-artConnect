name: ArtConnect App Expo Build & Firebase App Distribution

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.13.0'

      - name: Install dependencies
        run: |
          cd ArtConnect/client
          npm install
          cd ../server
          npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Fetch and Parse Latest Build URL
        run: |
          cd ArtConnect/client

          echo "üîê Checking Expo login..."
          eas whoami

          echo "üì¶ Fetching latest build (JSON + non-interactive)..."
          eas build:list --limit 1 --json --non-interactive > output.json || {
            echo "‚ùå Failed to get build list"
            cat output.json
            exit 1
          }

          echo "üìÑ Build JSON:"
          cat output.json

          BUILD_URL=$(jq -r '.[0].artifacts.buildUrl' output.json)

          if [ "$BUILD_URL" == "null" ] || [ -z "$BUILD_URL" ]; then
            echo "‚ùå No build URL found."
            exit 1
          fi

          echo "‚¨áÔ∏è Downloading AAB from: $BUILD_URL"
          curl -o app.aab "$BUILD_URL"

          # Debugging AAB file download
          ls -l app.aab
          if [ ! -f app.aab ]; then
            echo "‚ùå AAB file not found."
            exit 1
          fi

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # - name: Set up Google Cloud credentials from secret
      #   run: |
      #     cd ArtConnect/client

      #     # Save the service account key to a file
      #     echo "${{ secrets.CREDENTIAL_FILE_CONTENT }}" > google-service-account.json
      #     export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/google-service-account.json
      #     echo "‚úÖ GOOGLE_APPLICATION_CREDENTIALS is set."

      # - name: Set Firebase project
      #   run: |
      #     firebase use --add --project ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Upload to Firebase App Distribution
        run: |
          cd ArtConnect/client

          echo "${{ secrets.CREDENTIAL_FILE_CONTENT }}" > google-service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/google-service-account.json
          echo "‚úÖ GOOGLE_APPLICATION_CREDENTIALS is set."

          echo "üîç Checking directory contents:"
          ls -al

          if [ ! -f "app.aab" ]; then
            echo "‚ùå app.aab not found!"
            exit 1
          fi

          # if [ ! -f "google-service-account.json" ]; then
          #   echo "‚ùå google-service-account.json not found!"
          #   exit 1
          # fi

          echo "‚úÖ app.aab && google-service-account.json found, proceeding with Firebase upload..."

          firebase appdistribution:distribute $(pwd)/app.aab \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups beta-tester \
            --release-notes "New automated build from GitHub Actions üöÄ"
            --debug
        shell: /usr/bin/bash -e {0}
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
